@import 
	"variaveis-responsividade"
;

//new element and wrapper behaviors

@mixin wrapper-container {
	margin-left: 0;
	margin-right: 0;
	padding-left: calc(#{(100% - $area)/2} - #{$gutter/2});
	padding-right: calc(#{(100% - $area)/2} - #{$gutter/2});
	width: 100%;
	align-items: flex-start;
}

@mixin neutral-container {
	margin-left: 0;
	margin-right: 0;
	padding-left: 0;
	padding-right: 0;
	width: 100%;
}

@mixin wrapped-element($ncol-left, $ncol-right, $grid) { //revisar saporra
	margin-left: calc(#{$ncol-left/$grid*100%} + #{$gutter/2});
	margin-right: calc(#{$ncol-right/$grid*100%} + #{$gutter/2});
	padding-left: 0;
	padding-right: 0;
	width: calc(#{($grid - $ncol-left + $ncol-right)/$grid*100%} - #{$gutter});
}

@mixin unwrapped-element($ncol-left, $ncol-right, $grid) {
	margin-left: calc(#{(100% - $area)/2 + $ncol-left*$area/$grid} + #{($ncol-left*$gutter/$grid)});
	margin-right: calc(#{(100% - $area)/2 + $ncol-right*$area/$grid} + #{($ncol-right*$gutter/$grid)});
	padding-left: 0;
	padding-right: 0;
	width: calc(#{$area - (($ncol-left + $ncol-right)*$area/$grid)} - #{(($ncol-left + $ncol-right)*$gutter/$grid)});
}

@mixin sub-element {
	margin-left: 0;
	margin-right: 0;
	padding-left: 0;
	padding-right: 0;
	width: 100%;
}

@mixin margin-col-1($ncol-left, $ncol-width, $ncol-right) {
	@media screen and (max-width: nth($breakpoints, 1) - 1px) {
		@if $ncol-width == 0 {
			display: none;
			}
		@else {
			margin-left: calc(#{$ncol-left/nth($col, 1)*100%} + #{$gutter/2});
			margin-right: calc(#{$ncol-right/nth($col, 1)*100%} + #{$gutter/2});
			width: calc(#{$ncol-width*percentage(1 / nth($col, 1))} - #{$gutter});
			display: block;
		}
	}
}

@mixin margin-col-2($ncol-left, $ncol-width, $ncol-right) {
	@media screen and (min-width: nth($breakpoints, 1)) {
		@if $ncol-width == 0 {
			display: none;
			}
		@else {
			margin-left: calc(#{$ncol-left/nth($col, 2)*100%} + #{$gutter/2});
			margin-right: calc(#{$ncol-right/nth($col, 2)*100%} + #{$gutter/2});
			width: calc(#{$ncol-width*percentage(1 / nth($col, 2))} - #{$gutter});
			display: block;
		}
	}
}

@mixin margin-col-3($ncol-left, $ncol-width, $ncol-right) {
	@media screen and (min-width: nth($breakpoints, 2)) {
		@if $ncol-width == 0 {
			display: none;
			}
		@else {
			margin-left: calc(#{$ncol-left/nth($col, 3)*100%} + #{$gutter/2});
			margin-right: calc(#{$ncol-right/nth($col, 3)*100%} + #{$gutter/2});
			width: calc(#{$ncol-width*percentage(1 / nth($col, 3))} - #{$gutter});
			display: block;
		}
	}
}

@mixin margin-col-4($ncol-left, $ncol-width, $ncol-right) {
	@media screen and (min-width: nth($breakpoints, 3)) {
		@if $ncol-width == 0 {
			display: none;
			}
		@else {
			margin-left: calc(#{$ncol-left/nth($col, 4)*100%} + #{$gutter/2});
			margin-right: calc(#{$ncol-right/nth($col, 4)*100%} + #{$gutter/2});
			width: calc(#{$ncol-width*percentage(1 / nth($col, 4))} - #{$gutter});
			display: block;
		}
	}
}


//alignment of a column of child elements
@mixin h-align-left {
	display: flex;
	flex-direction: column;
	align-items: flex-start;
}

@mixin h-align-right {
	display: flex;
	flex-direction: column;
	align-items: flex-end;
}

@mixin h-align-center {
	display: flex;
	flex-direction: column;
	align-items: center;
}

//alignment of a row of child elements
@mixin v-align-top {
	display: flex;
	flex-direction: row;
	align-items: flex-start;
}

@mixin v-align-bottom {
	display: flex;
	flex-direction: row;
	align-items: flex-end;
}

@mixin v-align-center {
	display: flex;
	flex-direction: row;
	align-items: center;
}


//distribution of a row of child elements
@mixin h-distribute-justify {
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	flex-wrap: wrap;
}

@mixin h-distribute-left {
	display: flex;
	flex-direction: row;
	justify-content: flex-start;
	flex-wrap: wrap;
}

@mixin h-distribute-right {
	display: flex;
	flex-direction: row;
	justify-content: flex-end;
	flex-wrap: wrap;
}

@mixin h-distribute-center {
	display: flex;
	flex-direction: row;
	justify-content: center;
	flex-wrap: wrap;
}